command /coordinate:
    trigger:
        if {coordinate.%player%} is not set:
            set {coordinate.%player%} to false
        if {coordinate.%player%} is false:
            set {coordinate.%player%} to true
            send "§6Affichage des coordone §aactiver"
        else if {coordinate.%player%} is true:
            set {coordinate.%player%} to false
            send "§6Affichage des coordone §4desactiver"
            send action bar "" to player

every tick:
    loop all players:
        if {coordinate.%loop-player%} is true:
            set {_xx} to floor(loop-player's x-coordinate)
            set {_yy} to floor(loop-player's y-coordinate)
            set {_zz} to floor(loop-player's z-coordinate)
            set {_coo} to "%{_xx}%, %{_yy}%, %{_zz}%"
            send action bar "%{_coo}%" to loop-player

on chat:
    cancel event
    if {playerColor.%player%} is not set:
        make player execute command "/color"
    broadcast "<%{playerColor.%player%}%%player%§r> %message%"

command /color [<text=White>]:
    trigger:
        if arg-1 is not set:
            send "§eTu doit spécifié une couleur"
        else if arg-1 is "Dark Red":
            set {playerColor.%player%} to "§4"
            send "§eCouleur changé -> §4%player%"
        else if arg-1 is "Red":
            set {playerColor.%player%} to "§c"
            send "§eCouleur changé -> §c%player%"
        else if arg-1 is "Gold":
            set {playerColor.%player%} to "§6"
            send "§eCouleur changé -> §6%player%"
        else if arg-1 is "Yellow":
            set {playerColor.%player%} to "§e"
            send "§eCouleur changé -> §e%player%"
        else if arg-1 is "Dark Green":
            set {playerColor.%player%} to "§2"
            send "§eCouleur changé -> §2%player%"
        else if arg-1 is "Green":
            set {playerColor.%player%} to "§a"
            send "§eCouleur changé -> §a%player%"
        else if arg-1 is "Aqua":
            set {playerColor.%player%} to "§b"
            send "§eCouleur changé -> §b%player%"
        else if arg-1 is "Dark Aqua":
            set {playerColor.%player%} to "§3"
            send "§eCouleur changé -> §3%player%"
        else if arg-1 is "Dark Blue":
            set {playerColor.%player%} to "§1"
            send "§eCouleur changé -> §1%player%"
        else if arg-1 is "Blue":
            set {playerColor.%player%} to "§9"
            send "§eCouleur changé -> §9%player%"
        else if arg-1 is "Light Purple":
            set {playerColor.%player%} to "§d"
            send "§eCouleur changé -> §d%player%"
        else if arg-1 is "Dark Purple":
            set {playerColor.%player%} to "§5"
            send "§eCouleur changé -> §5%player%"
        else if arg-1 is "White":
            set {playerColor.%player%} to "§r"
            send "§eCouleur changé -> §r%player%"
        else if arg-1 is "Gray":
            set {playerColor.%player%} to "§7"
            send "§eCouleur changé -> §7%player%"
        else if arg-1 is "Dark Gray":
            set {playerColor.%player%} to "§8"
            send "§eCouleur changé -> §8%player%"
        else if arg-1 is "Black":
            set {playerColor.%player%} to "§0"
            send "§eCouleur changé -> §0%player%"

on tab complete of "/color":
    set {colorList::*} to "Dark Red", "Red", "Gold", "Yellow", "Dark Green", "Green", "Aqua", "Dark Aqua", "Dark Blue", "Blue", "Light Purple", "Dark Purple", "White", "Gray", "Dark Gray" and "Black"
    set tab completions for position 1 to {colorList::*}

command /random [<text>] [<int=1>] [<int=1>]:
    trigger:
        if player is op:
            if arg-1 is not set:
                send "§c[Erreur] argument manquant !"
            else if arg-1 is "pickaxe":
                set {_item} to diamond pickaxe named "&4R&6a&2n&bd&3o&dm &cP&7i§ec&6k&2a§ax§5e"
                set line 1 of lore of {_item} to "§7Has a chance of giving a random brick"
                #set {_nbt} to nbt of {_item}
                #add "{"Tags:[randomPickaxe]"}" to nbt of {_item}
                give {_item} to player
                #make console execute command "/give %player% diamond_pickaxe{display:{Name:"Random Pickaxe"},{randomPickaxe:1b}}"
            else if arg-1 is "brick":
                set {_count} to arg-3
                if arg-2 is 1:
                    set {_item} to brick named "&4R&6a&2n&bd&3o&dm &cB&7r§ei&6c&2k"
                    set line 1 of lore of {_item} to "§7Right click for §acommon§7 random loot"
                    set line 2 of lore of {_item} to "§7Rarity §l§acommon"
                    give {_count} of {_item} to player
                else if arg-2 is 2:
                    set {_item} to brick named "&4R&6a&2n&bd&3o&dm &cB&7r§ei&6c&2k"
                    set line 1 of lore of {_item} to "§7Right click for §brare§7 random loot"
                    set line 2 of lore of {_item} to "§7Rarity §l§bRare"
                    give {_count} of {_item} to player
                else if arg-2 is 3:
                    set {_item} to brick named "&4R&6a&2n&bd&3o&dm &cB&7r§ei&6c&2k"
                    set line 1 of lore of {_item} to "§7Right click for §5epic§7 random loot"
                    set line 2 of lore of {_item} to "§7Rarity §l§5Epic"
                    give {_count} of {_item} to player
                else if arg-2 is 4:
                    set {_item} to brick named "&4R&6a&2n&bd&3o&dm &cB&7r§ei&6c&2k"
                    set line 1 of lore of {_item} to "§7Right click for §elegendary§7 random loot"
                    set line 2 of lore of {_item} to "§7Rarity §l§eLegendary"
                    give {_count} of {_item} to player
                    #set {_nbt} to nbt of {_item}
                    #add "{"Tags:[randomLoot]"}" to nbt of {_item}
                    #give {_item} to player
                    
                    #add "{randomBrick:1b}" to nbt of {_item}
                    
                #make console execute command "/give %player% brick{Tags:[randomBrick]randomBrick:1b,display:{Name:\'[{\"text\":\"R\",\"italic\":false,\"color\":\"dark_red\"},{\"text\":\"a\",\"color\":\"gold\"},{\"text\":\"n\",\"color\":\"dark_green\"},{\"text\":\"d\",\"color\":\"aqua\"},{\"text\":\"o\",\"color\":\"dark_blue\"},{\"text\":\"m\",\"color\":\"light_purple\"},{\"text\":\" \",\"color\":\"light_purple\"},{\"text\":\"B\",\"color\":\"red\"},{\"text\":\"r\",\"color\":\"dark_gray\"},{\"text\":\"i\"},{\"text\":\"c\",\"color\":\"gold\"},{\"text\":\"k\",\"color\":\"dark_green\"}]\',Lore:['[{\"text\":\"Right click for random loot\",\"italic\":false}]\']}} 1"
            else if arg-1 is "enchant":
                set {_line} to 1
                set {_lineN} to 0
                if line 1 of lore of player's tool is set:
                    set {_line} to 2
                    set {_lineN} to 1
                if line 2 of lore of player's tool is set:
                    set {_line} to 3
                    set {_lineN} to 2
                if line 3 of lore of player's tool is set:
                    set {_line} to 4
                    set {_lineN} to 3
                if line 4 of lore of player's tool is set:
                    set {_line} to 5
                    set {_lineN} to 4
                if line 5 of lore of player's tool is set:
                    set {_line} to 6
                    set {_lineN} to 5
                if line 6 of lore of player's tool is set:
                    set {_line} to 7
                    set {_lineN} to 6
                if line 7 of lore of player's tool is set:
                    set {_line} to 8
                    set {_lineN} to 7
                if player's tool is air:
                    stop
                if arg-2 is 1:
                    if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §aI":
                        send action bar "§eVous avez déja cet enchantement sur votre §c%player's tool%" to player
                    else:
                        if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §bII":
                            set line {_lineN} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §aI"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                        else if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §5III":
                            set line {_lineN} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §aI"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                        else if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §eIV":
                            set line {_lineN} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §aI"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                        else:
                            set line {_line} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §aI"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                else if arg-2 is 2:
                    if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §bII":
                        send action bar "§eVous avez déja cet enchantement sur votre §c%player's tool%" to player
                    else:
                        if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §aI":
                            set line {_lineN} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §bII"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                        else:
                            set line {_line} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §bII"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                else if arg-2 is 3:
                    if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §5III":
                        send action bar "§eVous avez déja cet enchantement sur votre §c%player's tool%" to player
                    else:
                        if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §bII":
                            set line {_lineN} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §5III"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                        else if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §aI":
                            set line {_lineN} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §5III"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                        else:
                            set line {_line} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §5III"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                else if arg-2 is 4:
                    if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §eIV":
                        send action bar "§eVous avez déja cet enchantement sur votre §c%player's tool%" to player
                    else:
                        if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §5III":
                            set line {_lineN} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §eIV"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                        else if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §bII":
                            set line {_lineN} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §eIV"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                        else if line {_lineN} of lore of player's tool contains "&4R&6a&2n&bd&3o&dm §aI":
                            set line {_lineN} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §eIV"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                        else:
                            set line {_line} of lore of player's tool to "&4R&6a&2n&bd&3o&dm §eIV"
                            play sound "entity.experience_orb.pickup" with volume 0.3 at player
                else if arg-2 is 5:
                    if line {_lineN} of lore of player's tool contains "§7Has a chance of giving a random brick":
                        send action bar "§eVous avez déja cet option sur votre §c%player's tool%" to player
                    else:
                        set line {_line} of lore of player's tool to "§7Has a chance of giving a random brick"
                        play sound "entity.experience_orb.pickup" with volume 0.3 at player
                


on tab complete of "/random":
    set {_list::*} to "pickaxe", "enchant" and "brick"
    set {_num::*} to "1","2","3" and "4"
    set {_enchant::*} to "1", "2", "3", "4" and "5"
    set tab completions for position 1 to {_list::*}
    if tab arg-1 is "brick":
        set tab completions for position 2 to {_num::*}
    if tab arg-1 is "enchant":
        set tab completions for position 2 to {_enchant::*}
on rightclick:
    if player's tool is brick:
        set {_list::*} to lore of player's tool
        if player is sneaking:
            if "%{_list::*}%" contains "§7Right click for §acommon§7 random loot":
                set {_num} to item amount of player's tool
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                loop {_num} times:
                    remove 1 of brick from player's tool
                    set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "redstone" and "lapis lazuli"
                    set {_count} to listCounter({randomLoot::*})
                    set {_num} to random integer between 1 and {_count}
                    set {_item} to random element out of {randomLoot::*} parsed as item
                    loop {_num} times:
                        give {_item} to player
            else if "%{_list::*}%" contains "§7Right click for §brare§7 random loot":
                set {_num} to item amount of player's tool
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                loop {_num} times:
                    remove 1 of brick from player's tool
                    set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "redstone" and "lapis lazuli"
                    set {_count} to listCounter({randomLoot::*})
                    set {_num} to random integer between 5 and {_count}
                    set {_item} to random element out of {randomLoot::*} parsed as item
                    loop {_num} times:
                        give {_item} to player
            else if "%{_list::*}%" contains "§7Right click for §5epic§7 random loot":
                set {_num} to item amount of player's tool
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                loop {_num} times:
                    remove 1 of brick from player's tool
                    set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "netherite scrap", "redstone", "redstone block" and "lapis lazuli"
                    set {_count} to listCounter({randomLoot::*})
                    set {_num} to random integer between 15 and {_count}
                    set {_item} to random element out of {randomLoot::*} parsed as item
                    loop {_num} times:
                        give {_item} to player
            else if "%{_list::*}%" contains "§7Right click for §elegendary§7 random loot":
                set {_num} to item amount of player's tool
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                loop {_num} times:
                    remove 1 of brick from player's tool
                    set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "netherite ingot", "redstone", "redstone block" and "lapis lazuli"
                    set {_count} to listCounter({randomLoot::*})
                    set {_num} to random integer between 50 and {_count}
                    set {_item} to random element out of {randomLoot::*} parsed as item
                    loop {_num} times:
                        give {_item} to player
        else:
            if "%{_list::*}%" contains "§7Right click for §acommon§7 random loot":
                remove 1 of brick from player's tool
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "redstone" and "lapis lazuli"
                set {_count} to listCounter({randomLoot::*})
                set {_num} to random integer between 1 and {_count}
                set {_item} to random element out of {randomLoot::*} parsed as item
                loop {_num} times:
                    give {_item} to player
                #send {_item}
                #make console execute command "/give %player% %{_item}%"
                #give {_item} to player
                #send "Count: %{_count}%\nNum: %{_num}%\nItem: %{_item}%"
            else if "%{_list::*}%" contains "§7Right click for §brare§7 random loot":
                remove 1 of brick from player's tool
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "redstone" and "lapis lazuli"
                set {_count} to listCounter({randomLoot::*})
                set {_num} to random integer between 5 and {_count}
                set {_item} to random element out of {randomLoot::*} parsed as item
                loop {_num} times:
                    give {_item} to player
            else if "%{_list::*}%" contains "§7Right click for §5epic§7 random loot":
                remove 1 of brick from player's tool
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "netherite scrap", "redstone", "redstone block" and "lapis lazuli"
                set {_count} to listCounter({randomLoot::*})
                set {_num} to random integer between 15 and {_count}
                set {_item} to random element out of {randomLoot::*} parsed as item
                loop {_num} times:
                    give {_item} to player
            else if "%{_list::*}%" contains "§7Right click for §elegendary§7 random loot":
                remove 1 of brick from player's tool
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "netherite ingot", "redstone", "redstone block" and "lapis lazuli"
                set {_count} to listCounter({randomLoot::*})
                set {_num} to random integer between 50 and {_count}
                set {_item} to random element out of {randomLoot::*} parsed as item
                loop {_num} times:
                    give {_item} to player
        
on break:
    set {_lore::*} to lore of player's tool
    if "%{_lore::*}%" contains "§7Has a chance of giving a random brick":
        set {_commun} to 1
        set {_rare} to random integer between 1 and 10
        set {_epic} to random integer between 1 and 30
        set {_legendary} to random integer between 1 and 70
        if "%{_lore::*}%" contains "&4R&6a&2n&bd&3o&dm §aI":
            set {_rare} to random integer between 1 and 7
            set {_epic} to random integer between 1 and 25
            set {_legendary} to random integer between 1 and 55
        else if "%{_lore::*}%" contains "&4R&6a&2n&bd&3o&dm §bII":
            set {_rare} to random integer between 1 and 5
            set {_epic} to random integer between 1 and 17
            set {_legendary} to random integer between 1 and 40
        else if "%{_lore::*}%" contains "&4R&6a&2n&bd&3o&dm §5III":
            set {_rare} to random integer between 1 and 3
            set {_epic} to random integer between 1 and 18
            set {_legendary} to random integer between 1 and 28
        else if "%{_lore::*}%" contains "&4R&6a&2n&bd&3o&dm §eIV":
            set {_rare} to random integer between 1 and 2
            set {_epic} to random integer between 1 and 8
            set {_legendary} to random integer between 1 and 15
        set {_rng} to random integer between 1 and 5
        set {_count} to random integer between 1 and 5
        if {_rng} = 1:
            if {_legendary} = 1:
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                set {_item} to brick named "&4R&6a&2n&bd&3o&dm &cB&7r§ei&6c&2k"
                set line 1 of lore of {_item} to "§7Right click for §elegendary§7 random loot"
                set line 2 of lore of {_item} to "§7Rarity §l§eLegendary"
                drop {_count} of {_item}
            else if {_epic} = 1:
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                set {_item} to brick named "&4R&6a&2n&bd&3o&dm &cB&7r§ei&6c&2k"
                set line 1 of lore of {_item} to "§7Right click for §5epic§7 random loot"
                set line 2 of lore of {_item} to "§7Rarity §l§5Epic"
                drop {_count} of {_item}
            else if {_rare} = 1:
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                set {_item} to brick named "&4R&6a&2n&bd&3o&dm &cB&7r§ei&6c&2k"
                set line 1 of lore of {_item} to "§7Right click for §brare§7 random loot"
                set line 2 of lore of {_item} to "§7Rarity §l§bRare"
                drop {_count} of {_item}
            else:
                play sound "entity.experience_orb.pickup" with volume 0.3 at player
                set {_item} to brick named "&4R&6a&2n&bd&3o&dm &cB&7r§ei&6c&2k"
                set line 1 of lore of {_item} to "§7Right click for §acommon§7 random loot"
                set line 2 of lore of {_item} to "§7Rarity §l§acommon"
                drop {_count} of {_item}

on load:
    set {_legendaryBrick} to brick named "&4R&6a&2n&bd&3o&dm &cB&7r§ei&6c&2k"
    set line 1 of lore of {_legendaryBrick} to "§7Right click for §elegendary§7 random loot"
    set line 2 of lore of {_legendaryBrick} to "§7Rarity §l§eLegendary"

    set {_item} to diamond pickaxe named "&4R&6a&2n&bd&3o&dm &cP&7i§ec&6k&2a§ax§5e"
    set line 1 of lore of {_item} to "§7Has a chance of giving a random brick"
    register new shaped recipe for {_item} using diamond block, emerald block, diamond block,air, stick, air, air and stick with id "random_pickaxe"
    
    set {_opener} to dispenser named "&4R&6a&2n&bd&3o&dm §cO§ep§2e§an§6e§5r"
    set line 1 of lore of {_opener} to "§7Automatically opens all random bricks"
    register new shaped recipe for {_opener} using netherite block, netherite block, netherite block, netherite block, dispenser, netherite block, netherite block, nether star and netherite block with id "random_opener"
    
    set {_specialBrick} to brick named "§5Special Brick"
    set line 1 of lore of {_specialBrick} to "§7Just for crafting"
    register new shaped recipe for {_specialBrick} using {_legendaryBrick}, {_legendaryBrick}, {_legendaryBrick}, {_legendaryBrick}, {_legendaryBrick}, {_legendaryBrick}, {_legendaryBrick}, {_legendaryBrick} and {_legendaryBrick} with id "special_brick"

    set {_ultimateBrick} to brick named "§4§lUltimate Brick"
    set line 1 of lore of {_ultimateBrick} to "§7Gives all the rare items/blocks in the game"
    set line 2 of lore of {_ultimateBrick} to "§4Waring: items/blocks spawn on ground at you"
    register new shaped recipe for {_ultimateBrick} using {_specialBrick}, {_specialBrick}, {_specialBrick}, {_specialBrick}, {_specialBrick}, {_specialBrick}, {_specialBrick}, {_specialBrick} and {_specialBrick} with id "ultimate_brick"
    
    set {_mob_farm_potion} to potion named "Potion of Strength"
    set line 1 of lore of {_mob_farm_potion} to "§1Strength III (1:30)"
    set line 3 of lore of {_mob_farm_potion} to "§5When Applied:"
    set line 4 of lore of {_mob_farm_potion} to "§1+12 Attack Damage"
    register new shapeless recipe for {_mob_farm_potion} using water bottle, blaze powder, redstone and glowstone with id "mob_farm_potion"

    add custom recipe "random_pickaxe" to {_book}
    add custom recipe "random_opener" to {_book}
    add custom recipe "special_brick" to {_book}
    add custom recipe "ultimate_brick" to {_book}
    add custom recipe "mob_farm_potion" to {_book}

on join:
    if {playerColor.%player%} is not set:
        make player execute command "/color"
    set join message to "§6[§a§l+§6]§r %{playerColor.%player%}%%player%"
    unlock recipe "random_pickaxe" for player
    unlock recipe "srandom_opener" for player
    unlock recipe "special_brick" for player
    unlock recipe "ultimate_brick" for player
    unlock recipe "mob_farm_potion" for player
on quit:
    if {playerColor.%player%} is not set:
        make player execute command "/color"
    set quit message to "§6[§4§l-§6]§r %{playerColor.%player%}%%player%"

command /rename [<text>]:
    trigger:
        if player is op:
            if arg-1 is not set:
                arg-1 = name of player's tool
            set {_arg} to arg-1
            set name of player's tool to colored {_arg}
        else:
            send "§cTu n'as pas la permission !"

on dispense:
    set {_list::*} to lore of event-item
    set {_listt::*} to lore of event-block
    if event-block is dispenser:
        if name of event-block is "&4R&6a&2n&bd&3o&dm §cO§ep§2e§an§6e§5r":
            if "%{_list::*}%" contains "§7Right click for §acommon§7 random loot":
                set {_items} to "%event-item%" parsed as item
                set {_entity} to {_items} parsed as entity
                delete {_entity}
                broadcast {_items}
                set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "redstone" and "lapis lazuli"
                set {_count} to listCounter({randomLoot::*})
                set {_num} to random integer between 1 and {_count}
                set {_item} to random element out of {randomLoot::*} parsed as item
                set {_count} to 0
                loop {_num} times:
                    add 1 to {_count}
                drop {_count} {_item} below event-location    
            else if "%{_list::*}%" contains "§7Right click for §brare§7 random loot":
                set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "redstone" and "lapis lazuli"
                set {_count} to listCounter({randomLoot::*})
                set {_num} to random integer between 5 and {_count}
                set {_item} to random element out of {randomLoot::*} parsed as item
                loop {_num} times:
                    drop {_item} below event-location
            else if "%{_list::*}%" contains "§7Right click for §5epic§7 random loot":
                set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "netherite scrap", "redstone", "redstone block" and "lapis lazuli"
                set {_count} to listCounter({randomLoot::*})
                set {_num} to random integer between 15 and {_count}
                set {_item} to random element out of {randomLoot::*} parsed as item
                loop {_num} times:
                    drop {_item} below event-location
            else if "%{_list::*}%" contains "§7Right click for §elegendary§7 random loot":
                set {randomLoot::*} to "diamond", "emerald", "iron ingot", "gold ingot", "netherite ingot", "redstone", "redstone block" and "lapis lazuli"
                set {_count} to listCounter({randomLoot::*})
                set {_num} to random integer between 50 and {_count}
                set {_item} to random element out of {randomLoot::*} parsed as item
                loop {_num} times:
                    drop {_item} below event-location       
        else:
            broadcast event-block's name

command /manager [<text>]:
    permission: op
    permission message: "§cVous n'avez pas la permission !"
    trigger:
        send "nothing"
command /mobspawn [<text>] [<integer>]:
    permission: op
    trigger:
        if arg-1 and arg-2 is set:
            spawnMob(arg-1, player, arg-2)
        else if arg-1 is not set:
            send "§cLe nom est manquant"
        else if arg-2 is not set:
            send "§cC'est §lhp §r§csont manquant"
        else:
            send "§cArgument invalide -> /mobspawn <name> <hp>"
function spawnMob(name: text, player: player, hp: integer):
    if {_name} = "warden_king":
        spawn 1 warden at {_player}
        set {_e} to last spawned entity
        set max health of {_e} to {_hp} / 2
        heal {_e} 
        set {_e}'s display name to "§2§lWarden King"
    else if {_name} = "skeleton_king":
        spawn a skeleton at {_player}
        set {_e} to last spawned entity
        set max health of {_e} to {_hp} / 2
        heal {_e}
        set helmet of {_e} to a netherite helmet of protection 10 and thorns 6
        set chestplate of {_e} to a netherite chestplate of protection 10 and thorns 6
        set leggings of {_e} to a netherite leggings of protection 10 and thorns 6
        set boots of {_e} to a netherite boots of protection 10 and thorns 6
        set held item of {_e} to a netherite sword of sharpness 10 and thorns 6
        set {_e}'s display name to "§8§lSkeleton King"
        
on death:
    if victim's name is "§2§lWarden King":
        set {_chance} to 10
        if level of looting of the attacker's tool is 1:
            set {_chance} to 30
        else if level of looting of the attacker's tool is 2:
            set {_chance} to 60
        else if level of looting of the attacker's tool is 3:
            set {_chance} to 90
        else if attacker's tool are enchanted with looting:
            set {_chance} to 100
        chance of {_chance}%:
            set {_item} to experience bottle named "§2§lWarden Bottle"
            set line 1 of lore of {_item} to "§7Right click for §e§l100 §7level"
            drop 1 of {_item} at victim's location
    if victim's name is "§0§lSkeleton King":
        set {_helmetChance} to 30
        set {_chestplateChance} to 20
        set {_leggingsChance} to 20
        set {_bootsChance} to 30
        set {_swordChance} to 20
        if level of looting of the attacker's tool is 1:
            send "1" to attacker
            set {_helmetChance} to 45
            set {_chestplateChance} to 40
            set {_leggingsChance} to 40
            set {_bootsChance} to 45
            set {_swordChance} to 40
        else if level of looting of the attacker's tool is 2:
            send "2" to attacker
            set {_helmetChance} to 55
            set {_chestplateChance} to 50
            set {_leggingsChance} to 50
            set {_bootsChance} to 55
            set {_swordChance} to 50
        else if level of looting of the attacker's tool is 3:
            send "3" to attacker
            set {_helmetChance} to 75
            set {_chestplateChance} to 70
            set {_leggingsChance} to 70
            set {_bootsChance} to 75
            set {_swordChance} to 70
        else if attacker's tool are enchanted with looting:
            send "inf" to attacker
            set {_helmetChance} to 100
            set {_chestplateChance} to 100
            set {_leggingsChance} to 100
            set {_bootsChance} to 100
            set {_swordChance} to 100
        chance of {_helmetChance}%:
            set {_helmet} to netherite helmet named "§8Skeleton King Helmet"
            set {_drops::*} to "§b§l+10 Armure", "§c§l+10 Vie", "§2§l+6 Contre", "§d§l+5 Speed", "§4§l+10 Force" and "§e§l+10 Radiactivité"
            set {_num} to random integer between 1 and 5
            set {_loreCount} to 0
            loop {_num} times:
                set line {_loreCount} of lore of {_helmet} to random element out of {_drops::*}
                add 1 to {_loreCount}
            drop {_helmet}
        chance of {_chestplateChance}%:
            set {_chesplate} to netherite chestplate named "§8Skeleton King Chestplate"
            set {_drops::*} to "§b§l+10 Armure", "§c§l+10 Vie", "§2§l+6 Contre", "§d§l+5 Speed", "§4§l+10 Force" and "§e§l+10 Radiactivité"
            set {_num} to random integer between 1 and 5
            set {_loreCount} to 0
            loop {_num} times:
                set line {_loreCount} of lore of {_chestplate} to random element out of {_drops::*}
                add 1 to {_loreCount}
            #enchant the {_chesplate} with protection 10
            #enchant the {_chesplate} with thorns 6
            drop {_chesplate}
        chance of {_leggingsChance}%:
            set {_leggings} to netherite leggings named "§8Skeleton King Leggings"
            set {_drops::*} to "§b§l+10 Armure", "§c§l+10 Vie", "§2§l+6 Contre", "§d§l+5 Speed", "§4§l+10 Force" and "§e§l+10 Radiactivité"
            set {_num} to random integer between 1 and 5
            set {_loreCount} to 0
            loop {_num} times:
                set line {_loreCount} of lore of {_chestplate} to random element out of {_drops::*}
                add 1 to {_loreCount}
            #enchant the {_leggings} with protection 10
            #enchant the {_leggings} with thorns 6
            drop {_leggings}
        chance of {_bootsChance}%:
            set {_boots} to netherite boots named "§8Skeleton King Boots"
            set {_drops::*} to "§b§l+10 Armure", "§c§l+10 Vie", "§2§l+6 Contre", "§d§l+5 Speed", "§4§l+10 Force" and "§e§l+10 Radiactivité"
            set {_num} to random integer between 1 and 5
            set {_loreCount} to 0
            loop {_num} times:
                set line {_loreCount} of lore of {_leggings} to random element out of {_drops::*}
                add 1 to {_loreCount}
            #enchant the {_boots} with protection 10*
            #enchant the {_boots} with thorns 6
            drop {_boots}
        chance of {_swordChance}%:
            set {_sword} to netherite sword named "§8Skeleton King Sword"
            set {_drops::*} to "§b§l+10 Armure", "§c§l+10 Vie", "§2§l+6 Contre", "§d§l+5 Speed", "§4§l+10 Force" and "§e§l+10 Radiactivité"
            set {_num} to random integer between 1 and 5
            set {_loreCount} to 0
            loop {_num} times:
                set line {_loreCount} of lore of {_sword} to random element out of {_drops::*}
                add 1 to {_loreCount}
            #enchant the {_sword} with sharpness 10
            drop {_sword}

on right click:
    if event-item is experience bottle:
        set {_list::*} to lore of event-item
        if "%{_list::*}%" contains "§7Right click for §e§l100 §7level":
            cancel event
            remove 1 of experience bottle from player's tool
            make console execute command "/xp add %player% 100 levels"
            play sound "entity.experience_orb.pickup" with volume 0.3 at player
    else if event-item is warden spawn egg:
        set {_list::*} to lore of event-item
        if "%{_list::*}%" contains "§7Right click to spawn the §2§lWarden King":
            cancel event
            remove 1 of warden spawn egg from player's tool
            spawnMob("warden_king", player, 3000)
    else if event-item is skeleton spawn egg:
        set {_list::*} to lore of event-item
        if "%{_list::*}%" contains "§7Right click to spawn the §0§lSkeleton King":
            cancel event
            remove 1 of skeleton spawn egg from player's tool
            spawnMob("skeleton_king", player, 500)

command /egg [<text= "Warden King">]:
    permission: op
    trigger:
        if arg-1 is "Warden King":
            set {_item} to warden spawn egg named "§2§lWarden King Spawn Egg"
            set line 1 of lore of {_item} to "§7Right click to spawn the §2§lWarden King"
            #if player's inventory has space to hold 1 {_item}:
            give {_item} to player
            #else:
                #drop {_item} at player 
        else if arg-1 is "Skeleton King":
            set {_item} to skeleton spawn egg named "§8§lSkeleton King Spawn Egg"
            set line 1 of lore of {_item} to "§7Right click to spawn the §0§lSkeleton King"
            #if player's inventory can hold space for 1 {_item}:
            give {_item} to player
            #else:
                #drop {_item} at player 

on tab complete of "/egg":
    set {_list::*} to "Warden King" and "Skeleton King"
    set tab completions for position 1 to {_list::*}
on tab complete of "/repair":
    set {_list::*} to "all"
    set tab completions of position 1 to {_list::*}
    
command /repair [<text>]:
    permission: op
    trigger:
        if arg-1 is not set:
            repair tool of player
            play sound "block.anvil.use" with volume 0.3 at player
        #else if arg-1 is "all":
            #loop all items in player's inventory:
                #repair tool of player
            #play sound "block.anvil.use" with volume 0.3 at player

on right click:
    set {_list::*} to lore of event-item
    if "%{_list::*}%" contains "§1Strength III (1:30)":
        cancel event
        loop 2 times:
            play sound "entity.generic.drink" with volume 0.3 at player
            wait 0.2 second
            play sound "entity.generic.drink" with volume 0.3 at player
            wait 0.2 second
            play sound "entity.generic.drink" with volume 0.3 at player
        remove 1 of event-item from player's tool
        apply strength 3 to player for 90 seconds
        #make console execute command "/give %player% minecraft:potion{CustomPotionEffects:[{Id:5,Amplifier:2,Duration:1800}],CustomPotionColor:14024884,display:{Name:"\"Potion Of Strength\""}}"
on tab complete of "/hammer":
	set {_list::*} to "3x3", "4x4" and "7x7"
	set tab completions for position 1 to {_list::*}
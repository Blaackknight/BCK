#command /test:
  #trigger:
    #set {Inv.%player%} to serialized contents of player's current inventory
    #set {Inv.helmet.%player%} to player's helmet
    #set {Inv.chestplate.%player%} to player's chestplate
    #set {Inv.leggings.%player%} to player's leggings
    #set {Inv.boots.%player%} to player's boots
    #message "Inventaire retiré"
    #clear player's inventory
    #wait 40 ticks
    #message "Inventaire donné"
    #set player's helmet to {Inv.helmet.%player%}
    #set player's chestplate to {Inv.chestplate.%player%}
    #set player's leggings to {Inv.leggings.%player%}
    #set player's boots to {Inv.boots.%player%}
    #set serialized contents of player's inventory to {Inv.%player%}
command /creative [<player>]:
    trigger:
        set {inv.%player%.helmet} to player's helmet
        set {inv.%player%.chestplate} to player's chestplate
        set {inv.%player%.leggings} to player's leggings
        set {inv.%player%.boots} to player's boots
        set {inv.%player%.coordinate} to player's location
        set {_count} to 0
        loop 36 times:
            set {inv.%player%.%{_count}%} to slot {_count} of player's inventory
            add 1 to {_count}
        clear player's inventory
        wait 4 ticks
        make console execute command "/mvtp %player% creative"
        wait 4 ticks
        set the helmet of player to {creative.inv.%player%.helmet}
        set the chestplate of player to {creative.inv.%player%.chestplate}
        set the leggings of player to {creative.inv.%player%.leggings}
        set the boots of player to {creative.inv.%player%.boots}
        set {_count} to 0
        loop 36 times:
            set slot {_count} of player's inventory to {creative.inv.%player%.%{_count}%}
            add 1 to {_count}
        make console execute command "/gamemode creative %player%"
command /world [<player>]:
    trigger:
        if arg-1 is set:
            set {_player} to arg-1
        else:
            set {_player} to player
        set {creative.inv.%player%.helmet} to {_player}'s helmet
        set {creative.inv.%player%.chestplate} to {_player}'s chestplate
        set {creative.inv.%player%.leggings} to {_player}'s leggings
        set {creative.inv.%player%.boots} to {_player}'s boots
        set {_count} to 0
        loop 36 times:
            set {creative.inv.%player%.%{_count}%} to slot {_count} of {_player}'s inventory
            add 1 to {_count}
        wait 5 ticks
        make console execute command "/mvtp %player% world"
        wait 10 ticks
        teleport {_player} at {inv.%player%.coordinate}
        wait 10 ticks
        make console execute command "/gamemode survival %{_player}%"
        set the helmet of {_player} to {inv.%{_player}%.helmet}
        set the chestplate of {_player} to {inv.%{_player}%.chestplate}
        set the leggings of {_player} to {inv.%{_player}%.leggings}
        set the boots of {_player} to {inv.%{_player}%.boots}
        set {_count} to 0
        loop 36 times:
            set slot {_count} of {_player}'s inventory to {inv.%{_player}%.%{_count}%}
            add 1 to {_count}

command /kit [<text>] [<text>]:
    permission: op
    trigger:
        set {_line} to 1
        set {_lineN} to 0
        if line 1 of lore of player's tool is set:
            set {_line} to 2
            set {_lineN} to 1
        if line 2 of lore of player's tool is set:
            set {_line} to 3
            set {_lineN} to 2
        if line 3 of lore of player's tool is set:
            set {_line} to 4
            set {_lineN} to 3
        if line 4 of lore of player's tool is set:
            set {_line} to 5
            set {_lineN} to 4
        if line 5 of lore of player's tool is set:
            set {_line} to 6
            set {_lineN} to 5
        if line 6 of lore of player's tool is set:
            set {_line} to 7
            set {_lineN} to 6
        if line 7 of lore of player's tool is set:
            set {_line} to 8
            set {_lineN} to 7

        if arg-1 is "miner":
            if arg-2 is not set:
                if line {_lineN} of lore of player's tool contains "§4Magnet §aI":
                    #send action bar "§eVous avez déja cet enchantement sur votre §c%player's tool%" to player
                    set line {_lineN} of lore of player's tool to "§4Magnet §bII"
                    play sound "entity.experience_orb.pickup" with volume 0.3 at player
                else if line {_lineN} of lore of player's tool contains "§4Magnet §bII":
                    set line {_lineN} of lore of player's tool to "§4Magnet §eIII"
                    play sound "entity.experience_orb.pickup" with volume 0.3 at player
                else if line {_lineN} of lore of player's tool contains "§4Magnet §eIII":
                    play sound "entity.villager.no" with volume 0.3 at player
                else:
                    set line {_line} of lore of player's tool to "§4Magnet §aI"
                    play sound "entity.experience_orb.pickup" with volume 0.3 at player
            else if arg-2 is "infinity":
                if line {_lineN} of lore of player's tool contains "§4Magnet §3∞":
                    send action bar "§eVous avez déja cet enchantement sur votre §c%player's tool%" to player
                    play sound "entity.villager.no" with volume 0.3 at player
                    #set line {_lineN} of lore of player's tool to "§4Magnet §bII"
                    #play sound "entity.experience_orb.pickup" with volume 0.3 at player
                else if line {_lineN} of lore of player's tool contains "§4Magnet §aI":
                    set line {_lineN} of lore of player's tool to "§4Magnet §3∞"
                    play sound "entity.experience_orb.pickup" with volume 0.3 at player
                else if line {_lineN} of lore of player's tool contains "§4Magnet §bII":
                    set line {_lineN} of lore of player's tool to "§4Magnet §3∞"
                    play sound "entity.villager.no" with volume 0.3 at player
                else if line {_lineN} of lore of player's tool contains "§4Magnet §eIII":
                    set line {_lineN} of lore of player's tool to "§4Magnet §3∞"
                    play sound "entity.experience_orb.pickup" with volume 0.3 at player
                else:
                    set line {_line} of lore of player's tool to "§4Magnet §3∞"
                    play sound "entity.experience_orb.pickup" with volume 0.3 at player
        else if arg-1 is "hammers":
            set {_mk1} to diamond pickaxe
            set line 1 of lore of {_mk1} to "§3Miner §aI"
            set {_mk2} to diamond pickaxe
            set line 1 of lore of {_mk2} to "§3Miner §bII"
            set {_mk3} to diamond pickaxe
            set line 1 of lore of {_mk3} to "§3Miner §eIII"
            give {_mk1} to player
            give {_mk2} to player
            give {_mk3} to player
            play sound "entity.experience_orb.pickup" with volume 0.3 at player
on tab complete of "/kit":
    set {_list::*} to "miner" and "hammers"
    set {_creative::*} to "infinity" and "nothing" 
    set tab completions for position 1 to {_list::*}
    if tab arg-1 is "miner":
        set tab completions for position 2 to {_creative::*}
on damage:
    if victim is a player:
        if event-world is "creative":
            cancel event
            #send "§eNotch ta protégé !" to victim
            
every tick:
    loop all players:
        if {magnet.%loop-player%} is true:
            set {_list::*} to lore of loop-player's chestplate
            if "%{_list::*}%" contains "§4Magnet §aI":
                teleport all dropped items in radius 10 around loop-player to loop-player
            else if "%{_list::*}%" contains "§4Magnet §bII":
                teleport all dropped items in radius 20 around loop-player to loop-player
            else if "%{_list::*}%" contains "§4Magnet §eIII":
                teleport all dropped items in radius 30 around loop-player to loop-player
            else if "%{_list::*}%" contains "§4Magnet §3∞":
                teleport all dropped items in radius 1000000 around loop-player to loop-player
            #send "xd" to loop-player
            #send "%loop-player%" to loop-player
on command "kill":
    if event-world is "creative":
        cancel event
        send "§cCommande désactivé dans ce monde.."

command /magnet [<text>]:
    trigger:
        if {magnet.%player%} is not set:
            set {magnet.%player%} to false
        if arg-1 is not set:
            if {magnet.%player%} is false:
                set {magnet.%player%} to true
                send "§6Magnet §aactivé"
            else if {magnet.%player%} is true:
                set {magnet.%player%} to false
                send "§6Magnet §4désactivé"
        else if arg-1 is "on":
            set {magnet.%player%} to true
            send "§6Magnet §aactivé"
        else if arg-1 is "off":
            set {magnet.%player%} to false
            send "§6Magnet §4désactivé"
        else if arg-1 is "infos":
            set {_list::*} to lore of player's chestplate
            if "%{_list::*}%" contains "§4Magnet §aI":
                send "§7Vous avez un magnet de niveaux §aI"
            else if "%{_list::*}%" contains "§4Magnet §bII":
                send "§7Vous avez un magnet de niveaux §bII"
            else if "%{_list::*}%" contains "§4Magnet §eIII":
                send "§7Vous avez un magnet de niveaux §eIII"
            else if "%{_list::*}%" contains "§4Magnet §3∞":
                send "§7Vous avez un magnet de niveaux §3∞"
            else:
                send "§7Vous n'avez aucun magnet.."
on tab complete of "/magnet":
    set {_list::*} to "on", "off" and "infos"
    set tab completions for position 1 to {_list::*}
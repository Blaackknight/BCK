function listCounter(value: objects) :: number:
    set {_num} to 0
    loop {_value::*}:
        add 1 to {_num}
    return {_num}
function giveNewItem(player: player, item: item, name: text, line1: text="false", line2: text="false", line3: text="false", line4: text="false", line5: text="false"):
    set {_items} to {_item} named {_name}
    if {_lore} is not "false":
        set line 1 of lore of {_items} to {_lore}
    if {_line2} is not "false":
        set line 2 of lore of {_item} to {_line2}
    if {_line3} is not "false":
        set line 3 of lore of {_item} to {_line3}
    if {_line4} is not "false":
        set line 4 of lore of {_item} to {_line4}
    if {_line5} is not "false":
        set line 5 of lore of {_item} to {_line5}
    give {_items} to {_player}
function bck_editfiles(source: text, find: text="data", mode: text="extract", data: text="") :: text:
	if {_mode} is "extract":
		set {_result} to yaml value "%{_find}%" from "bck.%{_source}%"
		if {_result} isn't set:
			if {_data} isn't empty:
				set {_result} to {_data}
	else if {_mode} is "delete":
		set {_result} to yaml value "%{_find}%" from "bck.%{_source}%"
		if {_result} is set:
			delete yaml value "%{_find}%" from "bck.%{_source}%"
			save yaml "bck.%{_source}%"
	else:
		set yaml value "%{_find}%" from "bck.%{_source}%" to {_data}
		save yaml "bck.%{_source}%"
	return {_result}
command /editSign [<text>] [<text>]:
    permission: op
    aliases: eds
    trigger:
        set {_b} to targeted block
        if {_b} is any sign:
            if arg-1 is set:
                if arg-1 contain "1" or "2" or "3" or "4":
                    set {_l::*} to split arg-1 by "_"
                    loop {_l::*}:
                        if loop-index is "2":
                            set {_line} to loop-value parsed as number
                    if arg-2 is set:
                        set line {_line} of {_b} to colored arg-2
                        send colored "§eModification made to the sign at §bline %{_line}% §e! §7(%arg-2%§7)" to player
                        play sound "ui.cartography_table.take_result" with volume 1 at player
                    else:
                        send "§cEnter a line !"
                else:
                    send "§cInvalid Option !"
            else:
                send "§cEnter option"
        else:
            send "§cYour targeted block is not sign !"
on tab complete of "/editSign" or "/eds":
    set tab completions for position 1 to "line_1", "line_2", "line_3" and "line_4"
# on right click on sign:
#     set {_t} to player's tool
#     set {_lore::*} to uncolored lore of {_t}
#     if {_lore::*} contain "Edit Stick":
#         set {_gui} to genericGui("§d§lSign §6§lEdit", 3)
#         set {_l1} to line 1
#         set {_l2} to line 2
#         set {_l3} to line 3
#         set {_l4} to line 4
#         if {_l1} is " " or "":
#             set {_l1} to "§c? §nnoting§r §c?"
#         if {_l2} is " " or "":
#             set {_l2} to "§c? §nnoting§r §c?"
#         if {_l3} is " " or "":
#             set {_l3} to "§c? §nnoting§r §c?"
#         if {_l4} is " " or "":
#             set {_l4} to "§c? §nnoting§r §c?"
#         set {editsign.%player%.condition} to true
#         set {editsign.%player%.location} to location of targeted block
#         set slot 10 of {_gui} to paper named "§eLine 1" with lore colored "§7⦑ §lEdit§r §7⦒§r%nl%%nl% %{_l1}%"
#         set slot 12 of {_gui} to paper named "§eLine 2" with lore colored "§7⦑ §lEdit§r §7⦒§r%nl%%nl% %{_l2}%"
#         set slot 14 of {_gui} to paper named "§eLine 3" with lore colored "§7⦑ §lEdit§r §7⦒§r%nl%%nl% %{_l3}%"
#         set slot 16 of {_gui} to paper named "§eLine 4" with lore colored "§7⦑ §lEdit§r §7⦒§r%nl%%nl% %{_l4}%"
#         open {_gui} to player
#     else:
#         stop
# on inventory click:
#     if {editsign.%player%.condition} is true:
#         set {_item} to event-slot
#         set {_i} to uncolored "%{_item}%"
#         cancel event
#         if {_i} contain "paper":
#             close player's inventory
#             replace "piece of paper named " with "" in {_i}
#             if {_i} is "Line 1":
#                 send "§eSend the desired modification in the §lchat§r§e, maximum number of characters §b§l16"
#                 set {editsign.%player%.line} to 1
#             else if {_i} is "Line 2":
#                 send "§eSend the desired modification in the §lchat§r§e, maximum number of characters §b§l16"
#                 set {editsign.%player%.line} to 2
#             else if {_i} is "Line 3":
#                 send "§eSend the desired modification in the §lchat§r§e, maximum number of characters §b§l16"
#                 set {editsign.%player%.line} to 3
#             else if {_i} is "Line 4":
#                 send "§eSend the desired modification in the §lchat§r§e, maximum number of characters §b§l16"
#                 set {editsign.%player%.line} to 4 
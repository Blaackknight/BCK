on load:
    send "§6[§4BCK§6]§r Loading core..." to console
    send "§6[§4BCK§6/§eCore§6]§r Loaded successfully !" to console
    bckRegisterSkripts()
    bckRegisterCommands()
    bckLettersLoad()
    # set {_m} to skriptUniversalConverterText("cut copper stair")
    # broadcast {_m}
    #broadcast {skripts::*}
command /permission [<offlineplayer>] [<text>] [<text>]:
    trigger:
        if hasPermission(player, "server.owner") is false:
            if "%player%" is not "<none>":
                send "§c§lHey! §7Tu n'a pas la permission :/"
                stop
        if arg-1 is not set:
            set {_p} to player
        else:
            set {_p} to arg-1
        if arg-2 is set:
            if arg-2 is "add":
                if arg-3 is set:
                    if {server.permission.%{_p}%.list::*} doesn't contain arg-3:
                        addPermission({_p}, arg-3, true)
                        send "§ePermission §b%arg-3% §eajouter à §7%{_p}%"
                    else:
                        send "§c%{_p}% a déja la permission %arg-3%"
                else:
                    send "§cAucune permission indiqué.."
            else if arg-2 is "remove":
                if arg-3 is not set:
                    send "§cNom d'une permission manquante."
                    stop
                if {server.permission.%{_p}%.list::*} doesn't contain arg-3:
                    send "§c%{_p}% n'as pas la permission %arg-3%.."
                    stop
                removePermission({_p}, arg-3, true)
                send "§ePermission §b%arg-3% §eenlever à §7%{_p}%"
            else if arg-2 is "reset":
                loop {server.permission.%{_p}%.list::*}:
                    removePermission({_p}, loop-value, true)
                    #send "%loop-value%"
            else if arg-2 is "default":
                loop {server.permission.%{_p}%.list::*}:
                    if loop-value is not "server.owner":
                        removePermission({_p}, loop-value, true)
                send "§6Permissions §4enlever§6 de §b%{_p}%"
                send "§2Ajout§6 des permissions par défault.."
                wait 1 second
                defaultPermission({_p})
                send "§6Permission par défault §2ajouter avec succès§6 !"
            else:
                send "§cOption inconnue (%arg-2%)"
        else:
            send "§c/permission %{_p}% <option>"
on tab complete of "/permission":
    if hasPermission(player, "server.command.permission") is false:
        stop
    set tab completions for position 2 to "add","remove", "default" and "reset"
    loop all players:
        if "%loop-value%" is tab arg-1:
            if tab arg-2 is "add":
                set tab completions for position 3 to getServerPermission(loop-value)
            else if tab arg-2 is "remove":
                set tab completions for position 3 to {server.permission.%loop-value%.list::*}
command /bck [<text>] [<text>] [<text>]:
    trigger:
        if arg-1 is set:
            if arg-1 is "slotCount":
                set {_n} to arg-2 parsed as number
                if {_n} > 0:
                    if {_n} > 6:
                        send "§c/bck %arg-1% <number>"
                        stop
                    set {_gui} to genericGui("§7Slot §bCounter", {_n})
                    set {_slot} to 1
                    set {_i} to yaml value "data.bck.slotCounter" from "bck.core.config"
                    set {_i} to {_i} parsed as item
                    loop 500 times:
                        set slot {_slot} of {_gui} to {_slot} of stone
                        add 1 to {_slot}
                    open {_gui} to player
                else:
                    send "§c/bck %arg-1% <number>"
            else if arg-1 is "type":
                set {_t} to player's tool
                if {_t} is not air:
                    send "§6[§4BCK§6/§bType§6] §d%type of {_t}%"
                else:
                    send "§6[§4BCK§6/§bType§6] §cRien dans votre main :/"
            else if arg-1 is "config":
            else if arg-1 is "nbt":
                set {_t} to player's tool
                if {_t} is not air:
                    set {_nbt} to nbt of {_t}
                    send formatted "§6[§4BCK§6/§eNbt§6] §d<insertion:%{_nbt}%>%{_nbt}%"
                else:
                    send "§6[§4BCK§6/§eNbt§6] §cRien dans votre main :/"
            else:
                send "§cOption iconnue (%arg-1%)"
        else:
            send "§c/bck <option>"
on tab complete of "/bck":
    if hasPermission(player, "server.command.bck") is false:
        stop
    set tab completions for position 1 to "slotCount", "type", "nbt" and "config"
    if tab arg-1 is "slotCount":
        set tab completions for position 2 to 1, 2, 3, 4, 5 and 6
on sign change:
    set {_line} to contenerConfig("data.bank.line")
    if line 1 is "bank":
        if hasPermission(player, "bank.create") is false:
            cancel event
            send lang("contener.bank.noPermission", player)
            set line 1 to ""
            stop
        if userDataNumber(player, "data.money") >= contenerConfigNumber("data.bank.price"):
            moneyRemove(player, contenerConfigNumber("data.bank.price"), true)
            set line 1 to "§6[§aBank§6]"
            set line 2 to "<player>"
            set line 3 to ""
            logCustom("%selector(event-player)% has just created a bank at %event-location%", 3)
            logCustom("%selector(event-player)% has just created a bank at %event-location%", 4)
            logCustom("%selector(event-player)% has just created a bank at %event-location%", 5)
        else:
            set {_r} to contenerConfigNumber("data.bank.price") - userDataNumber(player, "data.money")
            set line 1 to ""
            send "%{_line}% §6Bank§r %{_line}%" to player
            set {_uuu} to lang("contener.bank.noEnoughtMoneyWithNumber", player)
            send "%{_uuu}% %{_r}%%{sbm}%"

on right click on sign:
    set {_line} to yaml value "data.drawer.line" from "bck.manager.contener.config"
    if line 1 is "§6[§aBank§6]":
        if hasPermission(player, "bank.use") is false:
            cancel event
            send lang("contener.bank.noPermission", player)
            stop
        if player is sneaking:
            #send "§6[§aDrawer§e]§r §7right click §r%player% sneak, (%event-block%)" to player
            
            set {_h} to player's tool
            set {_p} to line 2 parsed as player
            set {_n} to userData("data.money")
            set {_n} to {_n} parsed as number
                
                #send "Number: %{_n}% / %{_i}%" to player
            if line 2 is "<player>":
                if {_n} >= 100:
                    set line 2 to "%player%"
                    set {_num} to line 3 parsed as integer
                    set line 3 to "%{_num} + 100%"
                    moneyRemove(player, 100, true)
                else:
                    set line 2 to "%player%"
                    set {_num} to line 3 parsed as integer
                    set line 3 to "%{_num} + {_n}%"
                    if {_n} is not 0:
                        moneyRemove(player, {_n}, true)
                        
            else if line 2 is not "<player>":
                if player = {_p}:
                    if {_n} >= 1000:
                        set {_type} to line 2
                        set {_ii} to "%player%"
                        set line 2 to "%player%"
                        set {_num} to line 3 parsed as integer
                        set line 3 to "%{_num} + 1000%"
                        moneyRemove(player, 1000, true)
                    else:
                        set line 2 to "%{_p}%"
                        set {_num} to line 3 parsed as integer
                        set line 3 to "%{_num} + {_n}%"
                        if {_n} is not 0:
                            moneyRemove(player, {_n}, true)
                else:
                    send lang("contener.bank.signIsNotYours", player)
        else:
            set {_h} to player's tool
            set {_p} to line 2 parsed as player
            set {_n} to userData.("data.money")
            set {_n} to {_n} parsed as number
                
                #send "Number: %{_n}% / %{_i}%" to player
            if line 2 is "<player>":
                if {_n} >= 1:
                    set line 2 to "%player%"
                    set {_num} to line 3 parsed as integer
                    set line 3 to "%{_num} + 1%"
                    moneyRemove(player, 1, true)
            else if line 2 is not "<player>":
                if player = {_p}:
                    if {_n} >= 1:
                        set {_type} to line 2
                        set {_ii} to "%player%"
                        set line 2 to "%player%"
                        set {_num} to line 3 parsed as integer
                        set line 3 to "%{_num} + 1%"
                        moneyRemove(player, 1, true)
                else:
                    send lang("contener.bank.signIsNotYours", player)
on left click on sign:
    set {_line} to yaml value "data.drawer.line" from "bck.manager.contener.config"
    if player's gamemode is creative:
        stop
    if line 1 is "§6[§aBank§6]":
        if hasPermission(player, "bank.use") is false:
            cancel event
            send lang("contener.bank.noPermission", player)
            stop
        if player is sneaking:
            set {_h} to player's tool
            set {_n} to userData("data.money")
            set {_n} to {_n} parsed as number
            set {_p} to line 2 parsed as player
            set {_num} to line 3 parsed as integer
            if line 2 is not "<player>":
                if player = {_p}:
                    if {_num} >= 1:
                        if {_num} = 1:
                            moneyAdd({_p}, 1, true)
                            #add 1 of {_i} to player's inventory
                            set line 3 to "%{_num} - 1%"
                        else if {_num} < 100:
                            moneyAdd({_p}, {_num}, true)
                            #add {_num} of {_i} to player's inventory
                            set line 3 to "%{_num} - {_num}%"
                        else if {_num} >= 100:
                            moneyAdd({_p}, 100, true)
                            #add 64 of {_i} to player's inventory
                            set line 3 to "%{_num} - 100%"
                    else:
                        set line 2 to "<player>"
                        set line 3 to ""
                else:
                    send lang("contener.bank.signIsNotYours", player)
            #send "§6[§aDrawer§6]§r §7left click §r%player% sneak, (%event-block%)" to player
        else:
            set {_h} to player's tool
            set {_n} to userData("data.money")
            sety {_n} to {_n} parsed as number
            set {_p} to line 2 parsed as player
            set {_num} to line 3 parsed as integer
            if line 2 is not "<player>":
                if player = {_p}:
                    if {_num} >= 1:
                        moneyAdd({_p}, 1, true)
                        #add 1 of {_i} to player's inventory
                        set line 3 to "%{_num} - 1%"
                    else:
                        set line 2 to "<player>"
                        set line 3 to ""
                else:
                    send lang("contener.bank.signIsNotYours", player)
            #send "Number: %{_n}%" to player
            #send "§6[§aDrawer§6]§r §7left click §r%player% not sneak with %player's tool%, (%event-block%)" to player
            #send "§6[§aDrawer§6]§r §7left click §r%player% not sneak, (%event-block%)" to player   
on break of sign:
    set {_l1} to line 1
    set {_l2} to line 2
    set {_l3} to line 3
    set {_l4} to line 4
    if line 1 is "§6[§aBank§6]":
        if player's gamemode is creative:
            cancel event
            wait 3 ticks
            if {_l1} is set:
                set line 1 to {_l1}
            if {_l2} is set:
                set line 2 to {_l2}
            if {_l3} is set:
                set line 3 to {_l3}
            if {_l4} is set:
                set line 4 to {_l4}
        else:
            if {_l2} is set:
                set {_p} to "%{_l2}%" parsed as player
            if {_l3} is set:
                set {_n} to "%{_l3}%" parsed as integer
            if player = {_p}:
                moneyAdd({_p}, {_n}, true)
            else:
                send lang("contener.bank.signIsNotYours", player)                       
on load:
    if {skripts::*} contains "core.sk" and "bck_manager.sk":
        send "§6[§4BCK§6]§r Loading clan..." to console
        send "§6[§4BCK§6/§1Clan§6]§r Loaded successfully !" to console
        load yaml "plugins/Skript/scripts/BCK/manager/clan/config.yml" as "bck.manager.clan.config"
        load yaml "plugins/Skript/scripts/BCK/manager/clan/data.yml" as "bck.manager.clan.data"
    else:
        broadcast "§6[§4BCK§6/§1Clan§6]§r Script loading cancel It requires (§lcore.sk§r and §lbck_manager.sk§r)"
        unload script file "bck_clan.sk"
command /clan [<text>] [<text>] [<text>]:
    trigger:
        set {_line} to yaml value "data.line" from "bck.manager.clan.config"
        if hasPermission(player, "server.command.clan") is false:
            send "§c§lHey! §7Tu n'a pas la permission :|"
            stop
        if arg-1 is set:
            if arg-1 is "create":
                if arg-2 is not set:
                    
                    send lang("clan.enterClanName", player)
                else:
                    if {clan.%arg-2%} is true:
                        
                        send lang("clan.clanNameAlreadyExist", player)
                    else:
                        if {clan.%player's uuid%} is set:
                            if {clan.%player's uuid%} is not false:
                                send lang("clan.alreadyInClan", player)
                            else:
                                set {clan.%arg-2%} to true
                                set {clan.%arg-2%.owner} to player
                                set {clan.%player's uuid%} to arg-2
                                add player to {clan.%arg-2%.players::*}
                                add arg-2 to {clan.list::*}
                                set {clan.%player's uuid%.ownedClan} to arg-2
                                set {clan.%player's uuid%.rank} to "Owner"
                                set {_uuu} to lang("clan.clanCreatedWithName", player)
                                send "%{_uuu}% <§l§3%arg-2%§e>"
                        else:
                            set {clan.%arg-2%} to true
                            set {clan.%arg-2%.owner} to player
                            set {clan.%player's uuid%} to arg-2
                            add player to {clan.%arg-2%.players::*}
                            add arg-2 to {clan.list::*}
                            set {clan.%player's uuid%.ownedClan} to arg-2
                            set {clan.%player's uuid%.rank} to "Owner"
                            set {_uuu} to lang("clan.clanCreatedWithName", player)
                            send "%{_uuu}% <§l§3%arg-2%§e>"
            else if arg-1 is "join":
                if arg-2 is not set:
                    send lang("clan.enterName", player)
                else:
                    if {clan.%arg-2%} is not set:
                        set {_uuu} to lang("clan.clanCreatedWithName", player)
                        send "%{_uuu}% <§l%arg-2%§r§c>"
                    else:
                        if {clan.%player's uuid%} is set:
                            if {clan.%player's uuid%} is not false:
                                send lang("clan.alreadyInClan", player)
                            else:
                                send formatted "&b%player% &eveut rejoindre votre clan:&r%nl%<tooltip:Accepté le joueur dans votre clan>&e[<cmd:/accept %player% %arg-2%>&2&lAccepté<reset>&r&e]<reset>%nl%<tooltip:Refuser le joueur dans votre clan>&e[<cmd:/refuse %player% %arg-2%>&4&lRefusé<reset>&r&e]<reset>" to {clan.%arg-2%.owner}
                                send lang("clan.demandSend", player)
                                set {clan.requested.%player%} to true
                        else:
                            send formatted "&b%player% &eveut rejoindre votre clan:&r%nl%<tooltip:Accepté le joueur dans votre clan>&e[<cmd:/accept %player% %arg-2%>&2&lAccepté<reset>&r&e]<reset>%nl%<tooltip:Refuser le joueur dans votre clan>&e[<cmd:/refuse %player% %arg-2%>&4&lRefusé<reset>&r&e]<reset>" to {clan.%arg-2%.owner}
                            send lang("clan.demandSend", player)
                            set {clan.requested.%player%} to true
            else if arg-1 is "leave":
                if arg-2 is not set:
                    send "§cVeuillez entrer le nom du clan.."
                else:
                    if {clan.%arg-2%} is not set:
                        set {_uuu} to lang("clan.clanCreatedWithName", player)
                        send "%{_uuu}% <§l%arg-2%§r§c>"
                    else:
                        if {clan.%player's uuid%} is false:
                            send lang("clan.alreadyInClan", player)
                        else:
                            remove player from {clan.%arg-2%.players::*}
                            set {clan.%player's uuid%} to false
                            clear {clan.%player's uuid%.rank}
                            send lang("clan.clanLeave", player)
            else if arg-1 is "promote":
                if {clan.%player's uuid%} is not false:
                    if {clan.%player's uuid%.rank} is "Owner" or "Co-Owner":
                        set {_p} to arg-2 parsed as offlineplayer
                        if {_p} is set:
                            if {_p} is player:
                                send lang("clan.dontPromoteYourSelf", player)
                                stop
                            if {clan.%{_p}'s uuid%} is {clan.%player's uuid%}:
                                if arg-3 is set:
                                    if {clan.ranks::*} contains arg-3:
                                        set {clan.%{_p}'s uuid%.rank} to arg-3
                                        send {clan.%{_p}'s uuid%.rank}
                                        send "§eRang de %{_p}% §2changé§e par %arg-3%"
                                        set {_uuu} to lang("clan.youGotPromoted", player)
                                        send formatted "%{_uuu}% §2%arg-3%§e par %selector(player)%" to {_p}
                                    else:
                                        set {_uuu} to lang("clan.noExistingClanWithName", player)
                                        send "%{_uuu}% %arg-3%"
                                else:
                                    send lang("clan.enterRank", player)
                            else:
                                set {_uuu} to lang("clan.notInYourClan", player)
                                send "§c%{_p}% %{_uuu}%"
                        else:
                            send lang("clan.enterPlayer", player)
                    else:
                        send lang("clan.owner&CoOwerPermission", player)
                else:
                    send lang("clan.noClan", player)
            else if arg-1 is "kick":
                if {clan.%player's uuid%.rank} is not "Owner" or "Co-Owner":
                    send lang("clan.owner&CoOwerPermission", player)
                    stop
                if arg-2 is set:
                    set {_p} to arg-2 parsed as offlineplayer
                    if {clan.%{_p}'s uuid%} is {clan.%player's uuid%}:
                        set {_clan} to {clan.%player's uuid%}
                        
                    else:
                        set {_uuu} to lang("clan.notInYourClan", player)
                        send "§c%{_p}% %{_uuu}%"
                else:
                    send lang("clan.enterPlayer", player)
            else if arg-1 is "diplomacy":
                if arg-2 is set:
                    if {clan.%player's uuid%.rank} is not "Owner" or "Co-Owner":
                        send "%{_line}% §6Clan§r %{_line}%"
                        send lang("clan.owner&CoOwerPermission", player)
                        stop
                    if arg-2 is "list":
                        set {_clan} to {clan.%player's uuid%}
                        send "%{_line}% §6Clan§r %{_line}%"
                        loop {clan.list::*}:
                            set {_d} to {clan.%loop-value%.diplomacy.%{_clan}%}
                            set {_data::*} to {_d} split by "|"
                            set {_nam} to {_data::1}
                            set {_dip} to {_data::2}
                            if {_dip} is not set:
                                set {_dip} to "Neutral"
                            send "§7⁃§r §b%loop-value% §7-> §6%{_dip}%"

                    else if arg-2 is "ally":
                        if arg-3 is set:
                            if {clan.list::*} contain arg-3:
                                send "%{_line}% §6Clan§r %{_line}%"
                                send lang("clan.allyDemandSend", player) 
                                send formatted "&b%player% &eveut rejoindre votre clan:&r%nl%<tooltip:Accepté le joueur dans votre clan>&e[<cmd:/accept %player% %arg-2%>&2&lAccepté<reset>&r&e]<reset>%nl%<tooltip:Refuser le joueur dans votre clan>&e[<cmd:/refuse %player% %arg-2%>&4&lRefusé<reset>&r&e]<reset>" to {clan.%arg-2%.owner}
                                set {clan.diplomacy.%arg-3%} to true
                            else:
                                send "%{_line}% §6Clan§r %{_line}%"
                                send lang("clan.clanNoExist", player)
                        else:
                            send "%{_line}% §6Clan§r %{_line}%"
                            send lang("clan.enterClan", player)
                    else if arg-2 is "neutral":
                    else if arg-2 is "enemy":
                    else:
                        send "%{_line}% §6Clan§r %{_line}%"
                        send lang("clan.unknownOption", player)
                else:
                    send "%{_line}% §6Clan§r %{_line}%"
                    send "§6/clan diplomacy §7<option>"
            else if arg-1 is "delete":
                if arg-2 is not set:
                    send lang("clan.enterClan", player)
                else:
                    if {clan.%arg-2%} is false:
                        set {_uuu} to lang("clan.noExistingClanWithName", player)
                        send "%{_uuu}% <§l%arg-2%§r§c>"
                    else if {clan.%player's uuid%.rank} is not "Owner":
                        send lang("clan.notOwner", player)
                    else:
                        set {clan.%arg-2%} to false
                        set {clan.%player's uuid%} to false
                        remove arg-2 from {clan.list::*}
                        set {clan.%player's uuid%.ownedClan} to false
                        loop {clan.%arg-2%.players::*}:
                            set {_p} to loop-value parsed as offlineplayer
                            set {clan.%{_p}'s uuid%} to false
                            delete {clan.%{_p}'s uuid%.rank}
                        delete {clan.%arg-2%.players::*}
                        send lang("clan.clanDelete", player)
            else if arg-1 is "list":
                if arg-2 is not set:
                    send lang("clan.enterOption", player)
                else:
                    if arg-2 is "clan":
                        send lang("clan.clanList.top", player)
                        loop {clan.list::*}:
                            send "§7⁃§r %loop-value%"
                        set {_uuu} to lang("clan.clanList.number", player)
                        send "%{_uuu}% §l%listCounter({clan.list::*})%"
                    else if arg-2 is "player":
                        if {clan.%player's uuid%.rank} is not "Owner" or "Co-Owner" or "Officier":
                            send lang("clan.owner&CoOwerPermission", player)
                        else:
                            send "§e⟬ Membres du §4§l%{clan.%player's uuid%}%§r§e clan ⟭"
                            loop {clan.%{clan.%player's uuid%}%.players::*}:
                                set {_p} to "%loop-value%" parsed as offlineplayer
                                set {_s} to {_p}
                                set {_rank} to {clan.%{_p}'s uuid%.rank}
                                set {_pp} to selector({_s})
                                if {_pp} contain "<none>":
                                    set {_pp} to {_s}
                                    #send {_s}
                                send formatted "§e⁃§r §6[§b%{_rank}%§6]§r §a%{_pp}%"
                            send "§eNombre de membre: §d§l%listCounter({clan.%{clan.%player's uuid%}%.players::*})%"
                            #send {clan.%{clan.%player's uuid%}%.players::*}
                    else:
                        set {_uuu} to lang("clan.unknownOption", player)
                        send "%{_uuu}%. (§l%arg-2%§r§c)"
            else if arg-1 is "reset":
                if player is not op:
                    set {_uuu} to lang("clan.unknownOption", player)
                    send "%{_uuu}%. (§l%arg-1%§r§c)"
                else:
                    set {clan.%arg-2%} to false
                    set {clan.%player's uuid%} to false
                    set {clan.%player's uuid%.ownedClan} to false
                    set {clan.%arg-2%.players::*} to {_null::*}
        else:
            send "§c/clan <option> "
on tab complete of "/clan":
    
    set {_options::*} to "create", "join", "leave", "delete", "promote", "kick", "diplomacy" and "list"
    set tab completions for position 1 to {_options::*}
    if tab arg-1 is "list":
        set tab completions for position 2 to "clan" and "player"
    if tab arg-1 is "diplomacy":
        set tab completions for position 2 to "enemy", "ally", "list" and "neutral"
        if tab arg-2 is not "list":
            set tab completions for position 3 to {clan.list::*}
    if tab arg-1 is "promote":
        loop all players:
            set {_p} to loop-value
            if {_p} is player:
                set {_clan} to {clan.%{_p}'s uuid%}
                set {_list::*} to {clan.%{_clan}%.players::*}
                set tab completions for position 2 to {_list::*}
        set tab completions for position 2 to {_list::*}
        set tab completions for position 3 to getClanRank()
    if tab arg-1 is "join":
        set tab completions for position 2 to {clan.list::*}
    if tab arg-1 is "leave":
        set tab completions for position 2 to {clan.list::*}
    if tab arg-1 is "kick":
        loop all players:
            set {_p} to loop-value
            if {_p} is player:
                set {_clan} to {clan.%{_p}'s uuid%}
                set {_list::*} to {clan.%{_clan}%.players::*}
                set tab completions for position 2 to {_list::*}
command /accept [<player>] [<text>] [<text>]:
    trigger:
        if {clan.requested.%arg-1%} is true:
            add arg-1 to {clan.%arg-2%.players::*}
            set {clan.%arg-1's uuid%} to arg-2
            set {clan.%arg-1's uuid%.rank} to "Member"
            set {clan.requested.%arg-1%} to false
            set {_uj} to lang("clan.clanJoin", player)
            send "%{_uj}% <§l§3%arg-2%§r§e>" to arg-1
            set {_ua} to lang("clan.requestAcceptedFrom", player)
            send "%{_ua}% §b%arg-1%" to player
        else if {clan.diplomacy.%arg-2%} is true:
            set {_clan} to {clan.%player's uuid%}
            set {clan.%arg-2%.diplomacy.%{_clan}%} to "%{_clan}%|%arg-3%"
            send "%{_line}% §6Clan§r %{_line}%" to player
            send "d"
            set {clan.%{_clan}%.diplomacy.%{_clan}%} to "%arg-2%|%arg-3%"
        else:
            stop
command /refuse [<player>] [<text>]:
    trigger:
        if {clan.requested.%arg-1%} is true:
            set {clan.requested.%arg-1%} to false
            set {_uu} to lang("clan.youRequestRefusedFrom", player)
            send "%{_uu}% <§l§3%arg-2%§r§e>" to arg-1
            set {_uuu} to lang("clan.requestRefusedFrom", player)
            send "%{_uuu}% §b%arg-1%" to {clan.%arg-2%.owner}
        else:
            stop
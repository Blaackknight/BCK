on load:
    set {_list::*} to {skripts::*}
	if {_list::*} contains "core.sk":
        send "§6[§4BCK§6]§r Loading manager..." to console
        send "§6[§4BCK§6/§5Manager§6]§r Loaded successfully !" to console
        load yaml "plugins/Skript/scripts/manager/config.yml" as "bck.manager.config"
        load yaml "plugins/Skript/scripts/manager/data.yml" as "bck.manager.data"
    else:
        broadcast "§6[§4BCK§6/§5Manager§6]§r Script loading cancel It requires (apixmj_manager.sk)"
		unload script file "bck_manager.sk"
command /manager:
    trigger:
        # if hasPermission(player, "server.command.manager") is false:
        #     send "§c§lHey! §7Tu n'a pas la permission :|"
        #     stop
        set {_sus} to managerAddonExist("money")
        set {_acc} to managerAddonExist("account")
        set {_gui} to genericGui("§4§lBCK Manager", 3)
        set {_susi} to paper named "§b⟪ Money ⟫"
        set {_ac} to writable book named "§d⟪ Account ⟫"
        if {_sus} is true:
            set {_sus_installed} to "§a§lInstallé§r"
        else:
            set {_ac_installed} to "§c§lNon Installé"
        if {_acc} is true:
            set {_ac_installed} to "§a§lInstallé§r"
        else:
            set {_ac_installed} to "§c§lNon Installé"
        set line 1 of lore of {_susi} to "§6Etat:§r %{_sus_installed}%"
        set line 1 of lore of {_ac} to "§6Etat:§r %{_ac_installed}%"
        set slot 11 of {_gui} to {_susi}
        set slot 13 of {_gui} to {_ac}
        open {_gui} to player
        set {inv.%player%} to "manager.main"
on inventory click:
    if {inv.%player%} is "manager.main":
        cancel event
        set {_i} to event-slot
        set {_t} to type of {_i}
        set {_n} to display name of {_i}
        set {_u} to uncolored {_n}
        if {_t} is not air:
            #send {_t} to player
            #send {_t} to player
            if "%{_t}%" contain "paper":
                if {_u} contain "Money":
                    set {_susGui} to genericGui("§b§lMoney", 3, true)
                    set {_sus} to managerAddonExist("money")
                    set {_susA} to managerAddonExist("money", true)
                    set {_install} to minecart named "§2§lInstaller"
                    if {_sus} is true:
                        set line 1 of lore of {_install} to "§7Déja installer"
                    else:
                        set line 1 of lore of {_install} to "§7Prêt à l'installation"
                    set {_uninstall} to tnt named "§4§lDésinstaller"
                    set {_active} to lever named "§6§lActiver/Désactiver"
                    if {_susA} is true:
                        set {_actived} to "§c§lDésactivé"
                    else:
                        set {_actived} to "§a§lActivé"
                    set line 1 of lore of {_active} to "§6Etat:§r %{_actived}%"
                    set slot 11 of {_susGui} to {_install}
                    set slot 13 of {_susGui} to {_active}
                    set slot 15 of {_susGui} to {_uninstall}
                    open {_susGui} to player
                    set {inv.%player%} to "manager.money.main"
            else if "%{_t}%" is "writable book":
                if {_u} contain "Account":
                    set {_acGui} to genericGui("§d§lAccount", 3, true)
                    set {_ac} to managerAddonExist("account")
                    set {_acc} to managerAddonExist("account", true)
                    set {_install} to minecart named "§2§lInstaller"
                    if {_ac} is true:
                        set line 1 of lore of {_install} to "§7Déja installer"
                    else:
                        set line 1 of lore of {_install} to "§7Prêt à l'installation"
                    set {_uninstall} to tnt named "§4§lDésinstaller"
                    set {_active} to lever named "§6§lActiver/Désactiver"
                    if {_acc} is true:
                        set {_actived} to "§c§lDésactivé"
                    else:
                        set {_actived} to "§a§lActivé"
                    set line 1 of lore of {_active} to "§6Etat:§r %{_actived}%"
                    set slot 11 of {_acGui} to {_install}
                    set slot 13 of {_acGui} to {_active}
                    set slot 15 of {_acGui} to {_uninstall}
                    open {_acGui} to player
                    set {inv.%player%} to "manager.account.main"
    else if {inv.%player%} is "manager.money.main":
        cancel event
        set {_i} to event-slot
        set {_t} to type of {_i}
        set {_n} to display name of {_i}
        set {_u} to uncolored {_n}
        if {_t} is not air:
            if "%{_t}%" contain "barrier":
                if {_u} contain "Back":
                    set {_sus} to managerAddonExist("money")
                    set {_acc} to managerAddonExist("account")
                    set {_gui} to genericGui("§4§lBCK Manager", 3)
                    set {_susi} to paper named "§b⟪ Money ⟫"
                    set {_ac} to writable book named "§d⟪ Account ⟫"
                    if {_sus} is true:
                        set {_sus_installed} to "§a§lInstallé§r"
                    else:
                        set {_ac_installed} to "§c§lNon Installé"
                    if {_acc} is true:
                        set {_ac_installed} to "§a§lInstallé§r"
                    else:
                        set {_sus_installed} to "§c§lNon Installé"
                    set line 1 of lore of {_susi} to "§6Etat:§r %{_sus_installed}%"
                    set line 1 of lore of {_ac} to "§6Etat:§r %{_ac_installed}%"
                    set slot 11 of {_gui} to {_susi}
                    set slot 13 of {_gui} to {_ac}
                    open {_gui} to player
                    set {inv.%player%} to "manager.main"
            else if "%{_t}%" is "minecart":
                if {_u} contain "Installer":
                    set {_lore::*} to uncolored lore of {_i}
                    if {_lore::*} doesn't contain "Déja installer":
                        send "§6[§4BCK§6/§bMoney§6]§r §2§lInstallation.."
            else if "%{_t}%" contain "lever":
                if {_u} contain "Activer":
                    set {_susA} to managerAddonExist("money", true)
                    if {_susA} is false:
                        set {_list::*} to fileList("plugins/Skript/scripts/manager/money/")
                        #broadcast "%{_list::*}%"
                        loop {_list::*}:
                            disable skript "/manager/money/%loop-value%"
                        set {_active} to lever named "§6§lActiver/Désactiver"
                        set {_actived} to "§c§lDésactivé"
                        set line 1 of lore of {_active} to "§6Etat:§r %{_actived}%"
                        set {_g} to player's current inventory
                        set slot 13 of {_g} to {_active}
                        send "§6[§4BCK§6/§bMoney§6]§e §cDésactivation§e réussi !"
                    else if {_susA} is true:
                        set {_list::*} to fileList("plugins/Skript/scripts/manager/money/")
                        loop {_list::*}:
                            enable skript "/manager/money/%loop-value%"
                        set {_active} to lever named "§6§lActiver/Désactiver"
                        set {_actived} to "§a§lActivé"
                        set line 1 of lore of {_active} to "§6Etat:§r %{_actived}%"
                        set {_g} to player's current inventory
                        set slot 13 of {_g} to {_active}
                        send "§6[§4BCK§6/§bMoney§6]§e §aActivation§e réussi !"
    else if {inv.%player%} is "manager.account.main":
        cancel event
        set {_i} to event-slot
        set {_t} to type of {_i}
        set {_n} to display name of {_i}
        set {_u} to uncolored {_n}
        if {_t} is not air:
            if "%{_t}%" contain "barrier":
                if {_u} contain "Back":
                    set {_sus} to managerAddonExist("money")
                    set {_acc} to managerAddonExist("account")
                    set {_gui} to genericGui("§4§lBCK Manager", 3)
                    set {_susi} to paper named "§b⟪ Money ⟫"
                    set {_ac} to writable book named "§d⟪ Account ⟫"
                    if {_sus} is true:
                        set {_sus_installed} to "§a§lInstallé§r"
                    else:
                        set {_ac_installed} to "§c§lNon Installé"
                    if {_acc} is true:
                        set {_ac_installed} to "§a§lInstallé§r"
                    else:
                        set {_sus_installed} to "§c§lNon Installé"
                    set line 1 of lore of {_susi} to "§6Etat:§r %{_sus_installed}%"
                    set line 1 of lore of {_ac} to "§6Etat:§r %{_ac_installed}%"
                    set slot 11 of {_gui} to {_susi}
                    set slot 13 of {_gui} to {_ac}
                    open {_gui} to player
                    set {inv.%player%} to "manager.main"
            else if "%{_t}%" is "minecart":
                if {_u} contain "Installer":
                    set {_lore::*} to uncolored lore of {_i}
                    if {_lore::*} doesn't contain "Déja installer":
                        send "§6[§4BCK§6/§dAccount§6]§r §2§lInstallation.."
            else if "%{_t}%" contain "lever":
                if {_u} contain "Activer":
                    set {_susA} to managerAddonExist("account", true)
                    if {_susA} is false:
                        set {_list::*} to fileList("plugins/Skript/scripts/manager/account/")
                        #broadcast "%{_list::*}%"
                        loop {_list::*}:
                            disable skript "/manager/account/%loop-value%"
                        set {_active} to lever named "§6§lActiver/Désactiver"
                        set {_actived} to "§c§lDésactivé"
                        set line 1 of lore of {_active} to "§6Etat:§r %{_actived}%"
                        set {_g} to player's current inventory
                        set slot 13 of {_g} to {_active}
                        send "§6[§4BCK§6/§dAccount§6]§e §cDésactivation§e réussi !"
                    else if {_susA} is true:
                        set {_list::*} to fileList("plugins/Skript/scripts/manager/account/")
                        loop {_list::*}:
                            enable skript "/manager/account/%loop-value%"
                        set {_active} to lever named "§6§lActiver/Désactiver"
                        set {_actived} to "§a§lActivé"
                        set line 1 of lore of {_active} to "§6Etat:§r %{_actived}%"
                        set {_g} to player's current inventory
                        set slot 13 of {_g} to {_active}
                        send "§6[§4BCK§6/§dAccount§6]§e §aActivation§e réussi !"
command /yml:
    trigger:
        # #teleport player to yaml value "%player%.location" from "bck.manager.data"
        # broadcast yaml value "data.%player%.location" from "bck.manager.data"
        # set {_t} to yaml value "data.gui.title" from "bck.manager.config"
        # broadcast formatted "%{_t}%"
        reload script "/BCK/"
command /yaml:
    trigger:
        set yaml value "data.%player%.location" from "bck.manager.data" to "location of player"
        save yaml "bck.manager.data"
        send "§eSaved !"